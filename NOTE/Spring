컴파일: 인간의 언어를 기계어(바이트/바이너리/0&1 코드)로
운영체제마다 0과 1의 조합이 다름, C언어의 경우 운영체제마다 컴파일러가 다름
자바는 컴파일러 이후 JVM을 거치기 때문에 하나의 컴파일러로 이루어져 있고, 각 JVM이 존재함
JVM은 자바 외 다른 언어에서도 사용되고 있음
JVM: 같은 자바 바이트 코드를 운영체제에 맞춰 해석해줌
JDK: Development Tools (javac, jheap, jconsole, etc..), Java Development Kit, 자바 (통합)개발 도구의 약자, JDK + JRE + 개발 도구(컴파일러, 디버그 도구 등)
JRE: Java Class Library, Java Runtime Environment, 자바 실행 환경, JVM + 자바 프로그램 실행에 필요한 라이브러리 파일, JVM 실행 환경 구현
JVM: Java Virtual Machine, 바이너리 코드를 읽고 검증하고 실행함
자바의 버젼 = JDK 버젼

빌드: 소스코드 파일을 컴퓨터에서 실행할 수 있는 독립 SW 가공물로 변환하는 과정, 독립 SW 가공물 = Artifact
, (소스코드 컴파일, 테스트 코드 컴파일, 테스트 코드 실행, 테스트 코드 리포트 작성, 기타 추가 설정 작업 진행, 패키징 수행, 최종 SW 결과물(Artifact) 산출)
실행: 코드를 컴파일을 거쳐 작동, 독립SW(Artifact)가 나올 수도 있고, 나오지 않을 수도 있다.
*** 인터프리터 언어(자바스크립트, 파이썬 등 한줄씩 읽어 실행하는 언어)는 컴파일이 필요 없다.
빌드툴: 소스코드의 빌드 과정을 자동으로 처리해주는 프로그램, 외부 소스코드(라이브러리) 자동 추가 및 관리
- 메이븐: xml 설정, 외부 라이브러리 관리, 장황한 빌드 스크립트 문제 해결, xml이 특정 경우 복잡하고, xml 자체의 한계가 있음
- 그레들: 그루비 언어로 설정, 외부라이버르리 관리, 유연한 빌드스크리브 작성, 성능 뛰어남


